(function (angular) {
    "use strict";

    angular.module('coeco.values').controller('valueEditorCtrl', Controller);

    Controller.$inject = ['entityType', 'dataService', '$stateParams', '$state', 'common'];
    function Controller(entityType, dataService, $stateParams, $state, common) {
        var vm = this;
        vm.entityType = entityType;
        vm.id = $stateParams.id;
        vm.entity = null;
        vm.save = save;
        vm.reset = reset;
        vm.errors = [];
        vm.isNew = vm.id === '0';
        vm.isKeyEditable = isKeyEditable;

        activate();

        function activate() {

            if (vm.isNew) {
                dataService.create(entityType.single, { CreatedBy: 'Me', UpdatedBy: 'Me' })
                    .then(function (entity) {
                        vm.entity = entity;
                    });

                return;
            }
            dataService.getById(entityType.single, vm.id).then(function (data) {
                vm.entity = data.entity;

            });
        }

        function isKeyEditable() {
            return vm.entity.entityType.autoGeneratedKeyType === breeze.AutoGeneratedKeyType.None;
        }

        function save() {
            if (vm.isNew) {
                dataService.add(vm.entity).then(function (msg) {
                    dataService.saveChanges().then(returnToList(msg), handleErrors);
                }, function (error) {
                    common.notify.error(error);
                });
            }
            else {
                dataService.saveChanges().then(returnToList('עודכן בהצלחה!'), handleErrors);
            }
        }

        function reset() {

            if (vm.entity.entityAspect.entityState.isDetached()) {
                dataService.create(vm.entity.entityType, { CreatedBy: 'Me', UpdatedBy: 'Me' })
                    .then(function (entity) {
                        vm.entity = entity;
                    });

                return;
            }
            vm.entity.entityAspect.rejectChanges();

        }

        function returnToList(msg) {
            common.notify.success(msg);
            $state.go('values.list', { entityType: vm.entityType.single });
        }

        function handleErrors(e) {
            vm.errors = e.entityErrors;
        }



    }

})(angular);